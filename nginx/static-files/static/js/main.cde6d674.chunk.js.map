{"version":3,"sources":["utils/constants.js","components/TodoForm.js","axios.js","components/Todos.js","components/SearchTodos.js","components/TodoList.js","App.js","index.js"],"names":["module","exports","TITLE","ADD_TODO","UPDATE","UPDATE_TODO","SEARCH_TODO","SKIPS","TODO_NOT_FOUND","NOTHING_PLANNED","ADD_SOME","PREV","NEXT","DATE","ALL","SHOW_ALL","TODAY","TodoForm","edit","onChangeDate","sendData","dateOfTodo","useState","inputDate","setInputDate","useForm","handleSubmit","register","reset","errors","formState","useEffect","handleSubmitForm","formData","text","text_todo","date","done","className","placeholder","name","required","onClick","maxLength","type","value","onChange","e","target","instance","axios","create","baseURL","Todos","search","todos","removeTodo","setEdit","completeTodo","todosList","map","todo","index","_id","length","slice","split","reverse","join","id","SearchTodos","input","handleChange","searchTodos","completeTodoSearch","inputRef","useRef","current","focus","autoComplete","ref","TodoList","currentDate","Date","currentDayOfMonth","getDate","currentMonth","getMonth","currentYear","getFullYear","today","undefined","setTodos","nrSkips","setNrSkips","todosNumber","setTodosNumber","setInput","setSearchTodos","setDateOfTodo","updated","setUpdated","a","get","res","data","fetchData","getSearchTodo","fetchDataAll","updateTodo","todoId","newValue","test","put","removedArr","filter","delete","completed","updatedTodos","newPage","direction","post","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cde6d674.chunk.js","sourcesContent":["module.exports = {\r\n  TITLE: \"What's the Plan for Today?\",\r\n  ADD_TODO: \"Add todo\",\r\n  UPDATE: \"Update\",\r\n  UPDATE_TODO: \"Update todo\",\r\n  SEARCH_TODO: \"Search todo\",\r\n  SKIPS: 8,\r\n  TODO_NOT_FOUND: \"Todo is not found!\",\r\n  NOTHING_PLANNED: \"Nothing planned!\",\r\n  ADD_SOME: \"Add some todos!\",\r\n  PREV: \"Prev\",\r\n  NEXT: \"Next\",\r\n  DATE: \"Date\",\r\n  ALL: \"All\",\r\n  SHOW_ALL: \"Show All\",\r\n  TODAY: \"Today\",\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ADD_TODO, UPDATE, UPDATE_TODO } from \"../utils/constants\";\r\nimport { useForm } from \"react-hook-form\";\r\nconst TodoForm = ({ edit, onChangeDate, sendData, dateOfTodo }) => {\r\n  // const [input, setInput] = useState(edit ? edit.value : \"\");\r\n  const [inputDate, setInputDate] = useState(dateOfTodo);\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  useEffect(() => {\r\n    setInputDate(dateOfTodo);\r\n  }, [dateOfTodo]);\r\n\r\n  // const handleChange = (e) => {\r\n  //   setInput(e.target.value);\r\n  // };\r\n\r\n  const handleDateChange = (e) => {\r\n    setInputDate(e.target.value);\r\n    onChangeDate(e.target.value);\r\n  };\r\n\r\n  const handleSubmitForm = (formData) => {\r\n    sendData({\r\n      text: formData.text_todo,\r\n      date: inputDate,\r\n      done: false,\r\n    });\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form className=\"todo-form\">\r\n      {edit ? (\r\n        <>\r\n          <input\r\n            placeholder={errors.text_todo ? \"Text is required\" : UPDATE_TODO}\r\n            name=\"text_todo\"\r\n            className=\"todo-input-update edit\"\r\n            {...register(\"text_todo\", { required: true })}\r\n          />\r\n          <button\r\n            onClick={handleSubmit(handleSubmitForm)}\r\n            className=\"todo-button edit\"\r\n          >\r\n            {UPDATE}\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <div className=\"add_todo_container\">\r\n          <div>\r\n            <textarea\r\n              placeholder={errors.text_todo ? \"Text is required\" : ADD_TODO}\r\n              name=\"text_todo\"\r\n              className=\"todo-input\"\r\n              maxLength=\"81\"\r\n              {...register(\"text_todo\", { required: true })}\r\n            />\r\n\r\n            {/* {errors.text_todo && <p> Text is required! </p>} */}\r\n          </div>\r\n          <div className=\"todo_buttons\">\r\n            {/* <button className='todo-button'>\r\n            {DATE}\r\n          </button> */}\r\n            <input\r\n              type=\"date\"\r\n              className=\"date_input\"\r\n              value={inputDate}\r\n              onChange={handleDateChange}\r\n            />\r\n            <br />\r\n            <button\r\n              onClick={handleSubmit(handleSubmitForm)}\r\n              className=\"todo-button\"\r\n            >\r\n              {ADD_TODO}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://localhost:80/backend\",\r\n});\r\nexport default instance;\r\n","import React from \"react\";\r\nimport { RiCloseCircleLine } from \"react-icons/ri\";\r\nimport { TiEdit } from \"react-icons/ti\";\r\nimport { ALL } from \"../utils/constants\";\r\nconst Todos = ({\r\n  search,\r\n  todos,\r\n  removeTodo,\r\n  setEdit,\r\n  completeTodo,\r\n  dateOfTodo,\r\n}) => {\r\n  const todosList = todos?.map((todo, index) => (\r\n    <div className={todo.done ? \"todo-row complete\" : \"todo-row\"} key={index}>\r\n      <div\r\n        className=\"todo_text\"\r\n        key={todo._id}\r\n        onClick={() => completeTodo(todo._id, todo.done)}\r\n      >\r\n        {/* <h4> {truncate(todo.todo_text,40)}</h4> */}\r\n\r\n        {todo.text.length > 54 ? (\r\n          <h4 className=\"txt_todo\">{todo.text}</h4>\r\n        ) : (\r\n          <div className=\"todo_text_container\">\r\n            <h4 className={todo.done ? \"completeLine\" : null}>{todo.text} </h4>\r\n            {!search && dateOfTodo !== ALL ? (\r\n              <></>\r\n            ) : (\r\n              <> {todo.date.slice(5, 10).split(\"-\").reverse().join(\"/\")}</>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"icons\">\r\n        <RiCloseCircleLine\r\n          onClick={() => removeTodo(todo._id)}\r\n          className=\"delete-icon\"\r\n        />\r\n        <TiEdit\r\n          onClick={() => setEdit({ id: todo._id, value: todo.text })}\r\n          className=\"edit-icon\"\r\n        />\r\n      </div>\r\n    </div>\r\n  ));\r\n  return <div>{todosList}</div>;\r\n};\r\n\r\nexport default Todos;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { SEARCH_TODO, TODO_NOT_FOUND } from \"../utils/constants\";\r\nimport Todos from \"./Todos\";\r\n\r\nconst SearchTodos = ({\r\n  input,\r\n  handleChange,\r\n  searchTodos,\r\n  removeTodo,\r\n  setEdit,\r\n  completeTodoSearch,\r\n  dateOfTodo,\r\n}) => {\r\n  const inputRef = useRef(null);\r\n  useEffect(() => {\r\n    inputRef?.current?.focus();\r\n  }, [input]);\r\n  return (\r\n    <div>\r\n      <h1>{SEARCH_TODO}</h1>\r\n      <form className=\"todo-form\">\r\n        <input\r\n          autoComplete=\"off\"\r\n          placeholder={SEARCH_TODO}\r\n          value={input}\r\n          onChange={handleChange}\r\n          name=\"text\"\r\n          ref={inputRef}\r\n          className=\"todo-input-search-page\"\r\n        />\r\n      </form>\r\n\r\n      {searchTodos.length > 0 ? (\r\n        <Todos\r\n          search={true}\r\n          todos={searchTodos}\r\n          removeTodo={removeTodo}\r\n          setEdit={setEdit}\r\n          completeTodo={completeTodoSearch}\r\n          dateOfTodo={dateOfTodo}\r\n        />\r\n      ) : (\r\n        <div className=\"not_found\">\r\n          <p>{TODO_NOT_FOUND}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchTodos;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport axios from \"../axios\";\r\nimport {\r\n  ADD_SOME,\r\n  ALL,\r\n  NEXT,\r\n  NOTHING_PLANNED,\r\n  PREV,\r\n  SEARCH_TODO,\r\n  SHOW_ALL,\r\n  SKIPS,\r\n  TITLE,\r\n  TODAY,\r\n  UPDATE_TODO,\r\n} from \"../utils/constants\";\r\nimport Todos from \"./Todos\";\r\nimport SearchTodos from \"./SearchTodos\";\r\nconst TodoList = () => {\r\n  const currentDate = new Date();\r\n  const currentDayOfMonth = currentDate.getDate();\r\n  const currentMonth = currentDate.getMonth();\r\n  const currentYear = currentDate.getFullYear();\r\n  let today = undefined;\r\n  if (currentMonth < 10) {\r\n    today =\r\n      currentYear + \"-\" + 0 + (currentMonth + 1) + \"-\" + currentDayOfMonth;\r\n  } else {\r\n    today = currentYear + \"-\" + (currentMonth + 1) + \"-\" + currentDayOfMonth;\r\n  }\r\n  const [todos, setTodos] = useState([]);\r\n  const [nrSkips, setNrSkips] = useState(0);\r\n  const [todosNumber, setTodosNumber] = useState(0);\r\n  const [input, setInput] = useState(\"\");\r\n  const [searchTodos, setSearchTodos] = useState([]);\r\n  const [dateOfTodo, setDateOfTodo] = useState(today);\r\n  const [updated, setUpdated] = useState(false);\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: \"\",\r\n  });\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const res = await axios.get(`/todos/search/${input}/${nrSkips}`);\r\n      setSearchTodos(res.data);\r\n    };\r\n    if (input) fetchData();\r\n  }, [input, nrSkips]);\r\n\r\n  const getSearchTodo = async (search) => {\r\n    const res = await axios.get(`/todos/search/${search}/${nrSkips}`);\r\n    setSearchTodos(res.data);\r\n  };\r\n  const showAll = () => {\r\n    setDateOfTodo(ALL);\r\n    setNrSkips(0);\r\n  };\r\n  const showToday = () => {\r\n    setDateOfTodo(today);\r\n    setNrSkips(0);\r\n  };\r\n  const onChangeDate = (todo) => {\r\n    setNrSkips(0);\r\n    setDateOfTodo(todo);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setInput(e.target.value);\r\n    if (e.target.value) {\r\n      setNrSkips(0);\r\n    } else {\r\n      setSearchTodos([]);\r\n    }\r\n  };\r\n\r\n  const submitUpdate = (value) => {\r\n    updateTodo(edit.id, value);\r\n    setEdit({\r\n      id: null,\r\n      value: \"\",\r\n    });\r\n  };\r\n\r\n  const addTodo = (todo) => {\r\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return;\r\n    }\r\n    axios.post(\"/todos\", {\r\n      text: todo.text,\r\n      date: todo.date,\r\n      done: todo.done,\r\n    });\r\n    setUpdated(!updated);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const res = await axios.get(`/todos/${dateOfTodo}`);\r\n      setTodosNumber(res.data);\r\n    };\r\n    const fetchDataAll = async () => {\r\n      const res = await axios.get(`/todos`);\r\n      setTodosNumber(res.data);\r\n    };\r\n    if (dateOfTodo !== ALL) {\r\n      fetchData();\r\n    } else if (dateOfTodo === ALL) {\r\n      fetchDataAll();\r\n    }\r\n  }, [dateOfTodo, todos.length, nrSkips, updated]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const res = await axios.get(`/todos/${dateOfTodo}/${nrSkips}`);\r\n      setTodos(res.data);\r\n    };\r\n    const fetchDataAll = async () => {\r\n      const res = await axios.get(`/todos/page/${nrSkips}`);\r\n      setTodos(res.data);\r\n    };\r\n    if (dateOfTodo !== ALL) {\r\n      fetchData();\r\n    } else if (dateOfTodo === ALL) {\r\n      fetchDataAll();\r\n    }\r\n  }, [todos.length, dateOfTodo, nrSkips, updated]);\r\n\r\n  const updateTodo = (todoId, newValue) => {\r\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n      return;\r\n    }\r\n    axios.put(`/todos/${todoId}/${newValue.text}`);\r\n    setUpdated(!updated);\r\n    if (input) {\r\n      getSearchTodo(input);\r\n    }\r\n  };\r\n\r\n  const removeTodo = async (id) => {\r\n    const removedArr = [...todos].filter((todo) => todo._id !== id);\r\n    await axios.delete(`/todos/${id}`);\r\n    if (input) {\r\n      getSearchTodo(input);\r\n    }\r\n    if (todosNumber.length >= SKIPS && todosNumber.length - 1 === nrSkips) {\r\n      setNrSkips(nrSkips - SKIPS);\r\n    }\r\n    setTodos(removedArr);\r\n  };\r\n\r\n  const completeTodo = async (id, completed) => {\r\n    let updatedTodos = todos.map((todo) => {\r\n      if (todo._id === id) {\r\n        todo.done = !todo.done;\r\n        completed = todo.done;\r\n      }\r\n      return todo;\r\n    });\r\n    await axios.put(`/completed/${id}/${completed}`);\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  const completeTodoSearch = async (id, completed) => {\r\n    let updatedTodos = searchTodos.map((todo) => {\r\n      if (todo._id === id) {\r\n        todo.done = !todo.done;\r\n        completed = todo.done;\r\n      }\r\n      return todo;\r\n    });\r\n    await axios.put(`/completed/${id}/${completed}`);\r\n    setTodos(updatedTodos);\r\n    setSearchTodos(updatedTodos);\r\n  };\r\n\r\n  const newPage = (direction) => {\r\n    if (direction === NEXT) {\r\n      setNrSkips(nrSkips + SKIPS);\r\n    } else if (direction === PREV) {\r\n      setNrSkips(nrSkips - SKIPS);\r\n    }\r\n  };\r\n\r\n  if (edit.id) {\r\n    return (\r\n      <>\r\n        <h1>{UPDATE_TODO}</h1>\r\n        <TodoForm\r\n          onChangeDate={onChangeDate}\r\n          dateOfTodo={dateOfTodo}\r\n          edit={edit}\r\n          sendData={submitUpdate}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n\r\n  if (input) {\r\n    return (\r\n      <>\r\n        <SearchTodos\r\n          input={input}\r\n          handleChange={handleChange}\r\n          searchTodos={searchTodos}\r\n          removeTodo={removeTodo}\r\n          setEdit={setEdit}\r\n          completeTodoSearch={completeTodoSearch}\r\n          dateOfTodo={dateOfTodo}\r\n        />\r\n        <div className=\"navigation_buttons\">\r\n          {/* {nrSkips >= SKIPS ? ( <button\r\n      className='todo-button'\r\n            onClick={()=>newPage(PREV)}\r\n            //className=\"button__page\"\r\n            style={{\r\n                minWidth: '7vw',\r\n                marginTop:'15px',\r\n                marginLeft:'26px',\r\n                marginBottom:'15px',\r\n                }}\r\n            >Prev \r\n            </button>) : (<button\r\n      className='todo-button'\r\n            onClick={()=>newPage(PREV)}\r\n            //className=\"button__page\"\r\n            style={{\r\n                minWidth: '7vw',\r\n                marginTop:'15px',\r\n                marginLeft:'26px',\r\n                marginBottom:'15px',\r\n                opacity: '0'\r\n                }}\r\n            >{PREV} \r\n            </button>) }\r\n            {nrSkips<todosNumber.length-SKIPS ? (<button\r\n            style={{\r\n                //backgroundColor:'white',\r\n                marginTop:'15px',\r\n                marginRight:'26px',\r\n                marginBottom:'15px',\r\n                color:'white',\r\n                minWidth:'7vw',\r\n                     }}\r\n            onClick={()=>newPage(NEXT)}\r\n            className='todo-button'\r\n            >{NEXT} \r\n            </button>) : (null) } */}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>{TITLE}</h1>\r\n      <TodoForm\r\n        dateOfTodo={dateOfTodo}\r\n        onChangeDate={onChangeDate}\r\n        sendData={addTodo}\r\n      />\r\n      <div className=\"search_reset_container\">\r\n        <div>\r\n          <input\r\n            autoComplete=\"off\"\r\n            placeholder={SEARCH_TODO}\r\n            value={input}\r\n            onChange={handleChange}\r\n            name=\"text\"\r\n            ref={inputRef}\r\n            className=\"todo-input-search\"\r\n          />\r\n        </div>\r\n        <div>\r\n          {dateOfTodo !== ALL ? (\r\n            <button onClick={showAll} className=\"todo-button\">\r\n              {SHOW_ALL}\r\n            </button>\r\n          ) : (\r\n            <button onClick={showToday} className=\"todo-button\">\r\n              {TODAY}\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"todos_container\">\r\n        {todos.length === 0 ? (\r\n          <div className=\"nothing_planned\">\r\n            <h1>{NOTHING_PLANNED}</h1>\r\n            <p>{ADD_SOME}</p>\r\n          </div>\r\n        ) : (\r\n          <Todos\r\n            todos={todos}\r\n            removeTodo={removeTodo}\r\n            setEdit={setEdit}\r\n            completeTodo={completeTodo}\r\n            dateOfTodo={dateOfTodo}\r\n          />\r\n        )}\r\n      </div>\r\n      <div className=\"navigation_buttons\">\r\n        {nrSkips >= SKIPS ? (\r\n          <button className=\"todo-button prev\" onClick={() => newPage(PREV)}>\r\n            {PREV}\r\n          </button>\r\n        ) : (\r\n          <button\r\n            className=\"todo-button prev opacity0\"\r\n            onClick={() => newPage(PREV)}\r\n          >\r\n            {PREV}\r\n          </button>\r\n        )}\r\n        {nrSkips < todosNumber.length - SKIPS ? (\r\n          <button onClick={() => newPage(NEXT)} className=\"todo-button next\">\r\n            {NEXT}\r\n          </button>\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}